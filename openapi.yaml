openapi: 3.0.3
info:
  title: Portal de Benefícios KNN API
  description: |
    API para o Portal de Benefícios KNN, permitindo que alunos da KNN Idiomas acessem promoções
    exclusivas de parceiros comerciais através de códigos de validação temporários.
  version: 1.0.0
  contact:
    name: Equipe de TI KNN Idiomas
    email: ti@knnidiomas.com.br

servers:
  - url: https://api.knnidiomas.com.br/v1
    description: Ambiente de produção
  - url: http://localhost:8000/v1
    description: Ambiente de desenvolvimento local

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT com claim 'role' (student|partner|admin|employee)

  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: INVALID_CODE
            msg:
              type: string
              example: Código expirado ou já usado
          required:
            - code
            - msg
      required:
        - error

    SuccessResponse:
      type: object
      properties:
        data:
          type: object
          description: Dados da resposta (varia conforme endpoint)
        msg:
          type: string
          default: ok
      required:
        - data
        - msg

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [ok]
        mode:
          type: string
          enum: [normal, degraded]
          description: Modo de operação (normal ou contingência)
      required:
        - status
        - mode

    Partner:
      type: object
      properties:
        id:
          type: string
          format: uuid
        trade_name:
          type: string
          example: Livraria Cultura
        category:
          type: string
          example: Livraria
        address:
          type: string
          example: Av. Paulista, 2073 - São Paulo/SP
        active:
          type: boolean
          default: true
      required:
        - id
        - trade_name
        - category
        - address
        - active

    PartnerDetail:
      allOf:
        - $ref: '#/components/schemas/Partner'
        - type: object
          properties:
            promotions:
              type: array
              items:
                $ref: '#/components/schemas/Promotion'

    Promotion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        partner_id:
          type: string
          format: uuid
        title:
          type: string
          example: 20% de desconto em livros de idiomas
        type:
          type: string
          example: discount
        valid_from:
          type: string
          format: date-time
        valid_to:
          type: string
          format: date-time
        active:
          type: boolean
          default: true
        target_profile:
          type: string
          enum: [student, employee, both]
          description: Perfil alvo da promoção
          example: student
      required:
        - id
        - partner_id
        - title
        - type
        - valid_from
        - valid_to
        - active
        - target_profile

    Student:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cpf_hash:
          type: string
          format: sha256
        nome_aluno:
          type: string
          example: João da Silva
        curso:
          type: string
          example: SEEDS 1
        ocupacao_aluno:
          type: string
          example: Estudante
          nullable: true
        email_aluno:
          type: string
          format: email
          nullable: true
        celular_aluno:
          type: string
          example: 98999123456
          nullable: true
        cep_aluno:
          type: string
          example: 65000-000
          nullable: true
        bairro:
          type: string
          example: Centro
          nullable: true
        complemento_aluno:
          type: string
          example: Apt 101
          nullable: true
        nome_responsavel:
          type: string
          example: Maria da Silva
          nullable: true
        email_responsavel:
          type: string
          format: email
          nullable: true
        active_until:
          type: string
          format: date
      required:
        - id
        - cpf_hash
        - nome_aluno
        - curso
        - active_until

    Employee:
      type: object
      properties:
        id:
          type: string
          format: uuid
        tenant_id:
          type: string
          format: uuid
        cpf_hash:
          type: string
          format: sha256
        name:
          type: string
          example: Maria Santos
        email:
          type: string
          format: email
        department:
          type: string
          example: Recursos Humanos
        active:
          type: boolean
          default: true
        favorite_partners:
          type: array
          items:
            type: string
            format: uuid
          description: Lista de IDs dos parceiros favoritos
      required:
        - id
        - tenant_id
        - cpf_hash
        - name
        - email
        - department
        - active

    ValidationCode:
      type: object
      properties:
        id:
          type: string
          format: uuid
        student_id:
          type: string
          format: uuid
        partner_id:
          type: string
          format: uuid
        code:
          type: string
          pattern: '^[0-9]{6}$'
          example: '123456'
        expires:
          type: string
          format: date-time
        used_at:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - student_id
        - partner_id
        - code
        - expires

    Redemption:
      type: object
      properties:
        id:
          type: string
          format: uuid
        validation_code_id:
          type: string
          format: uuid
        value:
          type: number
          format: float
          example: 50.00
        used_at:
          type: string
          format: date-time
      required:
        - id
        - validation_code_id
        - value
        - used_at

    RedeemRequest:
      type: object
      properties:
        code:
          type: string
          pattern: '^[0-9]{6}$'
          example: '123456'
        cnpj:
          type: string
          pattern: '^[0-9]{14}$'
          example: '12345678000195'
      required:
        - code
        - cnpj

    ValidationCodeRequest:
      type: object
      properties:
        partner_id:
          type: string
          format: uuid
      required:
        - partner_id

    PromotionRequest:
      type: object
      properties:
        title:
          type: string
          example: 20% de desconto em livros de idiomas
        type:
          type: string
          example: discount
        valid_from:
          type: string
          format: date-time
        valid_to:
          type: string
          format: date-time
        active:
          type: boolean
          default: true
      required:
        - title
        - type
        - valid_from
        - valid_to

    NotificationRequest:
      type: object
      properties:
        target:
          type: string
          enum: [students, partners]
        filter:
          type: object
          description: Filtros para selecionar destinatários
        message:
          type: string
        type:
          type: string
          enum: [email, push, both]
          default: both
      required:
        - target
        - message

    Metrics:
      type: object
      properties:
        active_students:
          type: integer
          example: 1250
        codes_generated:
          type: integer
          example: 3456
        codes_redeemed:
          type: integer
          example: 2789
        top_partners:
          type: array
          items:
            type: object
            properties:
              partner_id:
                type: string
                format: uuid
              trade_name:
                type: string
              redemptions:
                type: integer
            required:
              - partner_id
              - trade_name
              - redemptions
      required:
        - active_students
        - codes_generated
        - codes_redeemed
        - top_partners

    RedemptionHistory:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            format: uuid
          partner:
            type: object
            properties:
              id:
                type: string
                format: uuid
              trade_name:
                type: string
            required:
              - id
              - trade_name
          promotion:
            type: object
            properties:
              title:
                type: string
            required:
              - title
          value:
            type: number
            format: float
          used_at:
            type: string
            format: date-time
        required:
          - id
          - partner
          - promotion
          - value
          - used_at

    FavoritePartners:
      type: array
      items:
        $ref: '#/components/schemas/Partner'

  parameters:
    CategoryParam:
      name: cat
      in: query
      description: Filtro por categoria de parceiro
      schema:
        type: string
    
    OrderParam:
      name: ord
      in: query
      description: Ordenação dos resultados
      schema:
        type: string
        enum: [name_asc, name_desc, category_asc, category_desc]
    
    PaginationLimit:
      name: limit
      in: query
      description: Número máximo de itens por página
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100
    
    PaginationOffset:
      name: offset
      in: query
      description: Offset para paginação
      schema:
        type: integer
        default: 0
        minimum: 0
    
    DateRangeParam:
      name: range
      in: query
      description: Período para relatório (formato YYYY-MM)
      required: true
      schema:
        type: string
        pattern: '^[0-9]{4}-[0-9]{2}$'
        example: '2025-05'
    
    EntityParam:
      name: entity
      in: path
      description: Tipo de entidade
      required: true
      schema:
        type: string
        enum: [students, partners, promotions, validation_codes, redemptions]
    
    IdParam:
      name: id
      in: path
      description: ID do recurso
      required: true
      schema:
        type: string
        format: uuid
    
    PartnerIdParam:
      name: id
      in: path
      description: ID do parceiro
      required: true
      schema:
        type: string
        format: uuid

security:
  - bearerAuth: []

paths:
  /health:
    get:
      summary: Verifica o status da API
      description: Endpoint público para verificar se a API está operacional e em qual modo
      security: []
      responses:
        '200':
          description: API operacional
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /partners:
    get:
      summary: Lista parceiros
      description: Retorna lista de parceiros com filtros e paginação
      tags:
        - student
      parameters:
        - $ref: '#/components/parameters/CategoryParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: Lista de parceiros
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/Partner'
                          total:
                            type: integer
                          limit:
                            type: integer
                          offset:
                            type: integer
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /partners/{id}:
    get:
      summary: Detalhes do parceiro
      description: Retorna detalhes do parceiro e suas promoções ativas
      tags:
        - student
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Detalhes do parceiro
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PartnerDetail'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Parceiro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /validation-codes:
    post:
      summary: Gera código de validação
      description: Gera um código de validação de 6 dígitos que expira em 3 minutos
      tags:
        - student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationCodeRequest'
      responses:
        '201':
          description: Código gerado com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          code:
                            type: string
                            example: '123456'
                          expires:
                            type: string
                            format: date-time
                        required:
                          - code
                          - expires
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Parceiro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /student/me/history:
    get:
      summary: Histórico de resgates
      description: Retorna o histórico de resgates do aluno
      tags:
        - student
      parameters:
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: Histórico de resgates
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            $ref: '#/components/schemas/RedemptionHistory'
                          total:
                            type: integer
                          limit:
                            type: integer
                          offset:
                            type: integer
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /student/me/fav:
    get:
      summary: Lista parceiros favoritos
      description: Retorna a lista de parceiros favoritos do aluno
      tags:
        - student
      responses:
        '200':
          description: Lista de parceiros favoritos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/FavoritePartners'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Adiciona parceiro aos favoritos
      description: Adiciona um parceiro à lista de favoritos do aluno
      tags:
        - student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                partner_id:
                  type: string
                  format: uuid
              required:
                - partner_id
      responses:
        '201':
          description: Parceiro adicionado aos favoritos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Parceiro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /student/me/fav/{id}:
    delete:
      summary: Remove parceiro dos favoritos
      description: Remove um parceiro da lista de favoritos do aluno
      tags:
        - student
      parameters:
        - $ref: '#/components/parameters/PartnerIdParam'
      responses:
        '200':
          description: Parceiro removido dos favoritos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Parceiro não encontrado nos favoritos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Endpoints para funcionários (employee)
  /employees/partners:
    get:
      summary: Lista parceiros (funcionários)
      description: Retorna lista de parceiros com filtros e paginação para funcionários
      tags:
        - employee
      parameters:
        - $ref: '#/components/parameters/CategoryParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: Lista de parceiros
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/Partner'
                          total:
                            type: integer
                          limit:
                            type: integer
                          offset:
                            type: integer
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /employees/partners/{id}:
    get:
      summary: Detalhes do parceiro (funcionários)
      description: Retorna detalhes de um parceiro específico e suas promoções ativas para funcionários
      tags:
        - employee
      parameters:
        - $ref: '#/components/parameters/PartnerIdParam'
      responses:
        '200':
          description: Detalhes do parceiro
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PartnerDetail'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Parceiro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /employees/validation-codes:
    post:
      summary: Gera código de validação (funcionários)
      description: Gera um código de validação de 6 dígitos com validade de 3 minutos para funcionários
      tags:
        - employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationCodeRequest'
      responses:
        '200':
          description: Código gerado com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          code:
                            type: string
                            example: "123456"
                            description: "Código de validação de 6 dígitos"
                          expires:
                            type: string
                            format: date-time
                            description: "Data e hora de expiração do código"
                          ttl_seconds:
                            type: integer
                            example: 180
                            description: "Tempo de vida em segundos (3 minutos)"
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (funcionário inativo ou role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Parceiro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /employees/me/history:
    get:
      summary: Histórico de resgates (funcionários)
      description: Retorna o histórico de códigos de validação usados pelo funcionário
      tags:
        - employee
      responses:
        '200':
          description: Histórico de códigos de validação usados
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          history:
                            type: array
                            items:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "***"
                                  description: "Código mascarado por segurança"
                                used_at:
                                  type: string
                                  format: date-time
                                  description: "Data e hora do uso do código"
                                partner:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      description: "ID do parceiro"
                                    name:
                                      type: string
                                      description: "Nome do parceiro"
                          total:
                            type: integer
                            description: "Total de códigos no histórico"
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/HistoryItem'
                          total:
                            type: integer
                          limit:
                            type: integer
                          offset:
                            type: integer
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /employees/me/fav:
    get:
      summary: Lista parceiros favoritos (funcionários)
      description: Retorna a lista de parceiros favoritos do funcionário
      tags:
        - employee
      responses:
        '200':
          description: Lista de parceiros favoritos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Partner'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Funcionário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Adiciona parceiro aos favoritos (funcionários)
      description: Adiciona um parceiro à lista de favoritos do funcionário
      tags:
        - employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                partner_id:
                  type: string
                  description: ID do parceiro
              required:
                - partner_id
      responses:
        '200':
          description: Parceiro adicionado aos favoritos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Parceiro ou funcionário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /employees/me/fav/{partner_id}:
    delete:
      summary: Remove parceiro dos favoritos (funcionários)
      description: Remove um parceiro da lista de favoritos do funcionário
      tags:
        - employee
      parameters:
        - name: partner_id
          in: path
          required: true
          description: ID do parceiro
          schema:
            type: string
      responses:
        '200':
          description: Parceiro removido dos favoritos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Funcionário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /partner/redeem:
    post:
      summary: Resgata código de validação
      description: Resgata um código de validação gerado por um aluno ou funcionário
      tags:
        - partner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedeemRequest'
      responses:
        '200':
          description: Código resgatado com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              name:
                                type: string
                                description: "Nome do usuário"
                              course:
                                type: string
                                description: "Curso (apenas para alunos)"
                              cnpj:
                                type: string
                                description: "CNPJ (apenas para funcionários)"
                              status:
                                type: string
                                description: "Status (apenas para funcionários)"
                          user_type:
                            type: string
                            enum: ["student", "employee"]
                            description: "Tipo do usuário que gerou o código"
                          code:
                            type: string
                            description: "Código de validação usado"
                          redeemed_at:
                            type: string
                            format: date-time
                            description: "Data e hora do resgate"
                          promotion:
                            type: object
                            properties:
                              title:
                                type: string
                            required:
                              - title
                        required:
                          - user
                          - user_type
                          - code
                          - redeemed_at
                          - promotion
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Código não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Código expirado ou promoção inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit excedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /partner/promotions:
    get:
      summary: Lista promoções do parceiro
      description: Retorna a lista de promoções do parceiro
      tags:
        - partner
      parameters:
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: Lista de promoções
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/Promotion'
                          total:
                            type: integer
                          limit:
                            type: integer
                          offset:
                            type: integer
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Cria nova promoção
      description: Cria uma nova promoção para o parceiro
      tags:
        - partner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
      responses:
        '201':
          description: Promoção criada com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Promotion'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /partner/promotions/{id}:
    put:
      summary: Atualiza promoção
      description: Atualiza uma promoção existente do parceiro
      tags:
        - partner
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
      responses:
        '200':
          description: Promoção atualizada com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Promotion'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Promoção não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Desativa promoção
      description: Desativa uma promoção existente do parceiro
      tags:
        - partner
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Promoção desativada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Promoção não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /partner/reports:
    get:
      summary: Relatório de uso
      description: Retorna relatório de uso das promoções do parceiro
      tags:
        - partner
      parameters:
        - $ref: '#/components/parameters/DateRangeParam'
      responses:
        '200':
          description: Relatório de uso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          period:
                            type: string
                            example: '2025-05'
                          total_codes:
                            type: integer
                          total_redemptions:
                            type: integer
                          promotions:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                title:
                                  type: string
                                redemptions:
                                  type: integer
                              required:
                                - id
                                - title
                                - redemptions
                        required:
                          - period
                          - total_codes
                          - total_redemptions
                          - promotions
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Parâmetro de data inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/{entity}:
    get:
      summary: Lista entidades
      description: Retorna lista de entidades (students, partners, promotions, etc.)
      tags:
        - admin
      parameters:
        - $ref: '#/components/parameters/EntityParam'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: Lista de entidades
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              oneOf:
                                - $ref: '#/components/schemas/Student'
                                - $ref: '#/components/schemas/Partner'
                                - $ref: '#/components/schemas/Promotion'
                                - $ref: '#/components/schemas/ValidationCode'
                                - $ref: '#/components/schemas/Redemption'
                            example:
                              - id: "550e8400-e29b-41d4-a716-446655440000"
                                nome: "João Silva"
                                email: "joao.silva@email.com"
                                telefone: "(11) 99999-9999"
                                cpf: "123.456.789-00"
                                data_nascimento: "2000-05-15"
                                cep: "01234-567"
                                endereco: "Rua das Flores, 123"
                                curso: "Engenharia de Software"
                                periodo: "Noturno"
                                ativo: true
                                nome_responsavel: null
                                created_at: "2025-01-01T10:00:00Z"
                                updated_at: "2025-01-01T10:00:00Z"
                              - id: "550e8400-e29b-41d4-a716-446655440001"
                                nome: "Maria Santos"
                                email: "maria.santos@email.com"
                                telefone: "(11) 88888-8888"
                                cpf: "987.654.321-00"
                                data_nascimento: "2005-08-20"
                                cep: "54321-098"
                                endereco: "Av. Principal, 456"
                                curso: "Administração"
                                periodo: "Matutino"
                                ativo: true
                                nome_responsavel: "Carlos Santos"
                                created_at: "2025-01-02T14:30:00Z"
                                updated_at: "2025-01-02T14:30:00Z"
                          total:
                            type: integer
                            example: 150
                          limit:
                            type: integer
                            example: 20
                          offset:
                            type: integer
                            example: 0
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Entidade não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Cria nova entidade
      description: Cria uma nova entidade (student, partner, promotion, etc.)
      tags:
        - admin
      parameters:
        - $ref: '#/components/parameters/EntityParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Student'
                - $ref: '#/components/schemas/Partner'
                - $ref: '#/components/schemas/Promotion'
      responses:
        '201':
          description: Entidade criada com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - $ref: '#/components/schemas/Student'
                          - $ref: '#/components/schemas/Partner'
                          - $ref: '#/components/schemas/Promotion'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Entidade não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/{entity}/{id}:
    put:
      summary: Atualiza entidade
      description: Atualiza uma entidade existente (student, partner, promotion, etc.)
      tags:
        - admin
      parameters:
        - $ref: '#/components/parameters/EntityParam'
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Student'
                - $ref: '#/components/schemas/Partner'
                - $ref: '#/components/schemas/Promotion'
      responses:
        '200':
          description: Entidade atualizada com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - $ref: '#/components/schemas/Student'
                          - $ref: '#/components/schemas/Partner'
                          - $ref: '#/components/schemas/Promotion'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Entidade não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Remove/inativa entidade
      description: Remove ou inativa uma entidade existente (student, partner, promotion, etc.)
      tags:
        - admin
      parameters:
        - $ref: '#/components/parameters/EntityParam'
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Entidade removida/inativada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Entidade não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/metrics:
    get:
      summary: KPIs do sistema
      description: Retorna métricas e KPIs do sistema
      tags:
        - admin
      responses:
        '200':
          description: Métricas do sistema
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Metrics'
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/notifications:
    post:
      summary: Envia notificações
      description: Envia notificações push/e-mail para alunos ou parceiros
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        '202':
          description: Notificações enfileiradas com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          recipients:
                            type: integer
                            description: Número de destinatários
                          message_id:
                            type: string
                            format: uuid
                            description: ID da mensagem para rastreamento
                        required:
                          - recipients
                          - message_id
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado (role inválida)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
