{
  "openapi": "3.1.0",
  "info": {
    "title": "Portal de Benefícios KNN API",
    "description": "API para o Portal de Benefícios KNN, permitindo que alunos da KNN Idiomas acessem promoções exclusivas de parceiros comerciais.",
    "version": "v1"
  },
  "paths": {
    "/v1/admin/partners": {
      "get": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "List Partners",
        "description": "Lista parceiros com filtros e paginação.\n\nEndpoint específico para administradores com as seguintes características:\n- Utiliza circuit breaker para alta disponibilidade\n- Ordenação habilitada por padrão\n- Acesso a todos os parceiros (ativos e inativos)",
        "operationId": "list_partners_v1_admin_partners_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "cat",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtro por categoria",
              "title": "Cat"
            },
            "description": "Filtro por categoria"
          },
          {
            "name": "ord",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Ordenação dos resultados",
              "enum": [
                "name_asc",
                "name_desc",
                "category_asc",
                "category_desc"
              ],
              "title": "Ord"
            },
            "description": "Ordenação dos resultados"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Número máximo de itens por página",
              "default": 20,
              "title": "Limit"
            },
            "description": "Número máximo de itens por página"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para paginação",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para paginação"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Create Partner",
        "description": "Cria um novo parceiro.",
        "operationId": "create_partner_v1_admin_partners_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Dados do parceiro",
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/partners/{id}": {
      "get": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Get Partner Details",
        "description": "Obtém detalhes completos de um parceiro específico.\nAdministradores podem ver detalhes de qualquer parceiro.",
        "operationId": "get_partner_details_v1_admin_partners__id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Id"
            },
            "description": "ID do parceiro"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/students": {
      "get": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "List Students",
        "description": "Lista todos os estudantes.",
        "operationId": "list_students_v1_admin_students_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Create Student",
        "description": "Cria um novo estudante.",
        "operationId": "create_student_v1_admin_students_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Data",
                "description": "Dados do estudante"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/admin/employees": {
      "get": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "List Employees",
        "description": "Lista todos os funcionários.",
        "operationId": "list_employees_v1_admin_employees_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Create Employee",
        "description": "Cria um novo funcionário.",
        "operationId": "create_employee_v1_admin_employees_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Data",
                "description": "Dados do funcionário"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/admin/benefits": {
      "get": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "List All Benefits",
        "description": "Lista todos os benefícios do sistema com filtros e paginação.\n\nEndpoint específico para administradores com as seguintes características:\n- Lista benefícios de todos os parceiros\n- Inclui partner_id na resposta para filtragem na tela\n- Suporte a filtros por parceiro, categoria e status\n- Paginação para performance\n- Circuit breaker para alta disponibilidade",
        "operationId": "list_all_benefits_v1_admin_benefits_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtro por ID do parceiro",
              "title": "Partner Id"
            },
            "description": "Filtro por ID do parceiro"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtro por categoria",
              "title": "Category"
            },
            "description": "Filtro por categoria"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtro por status",
              "enum": [
                "active",
                "inactive",
                "expired"
              ],
              "title": "Status"
            },
            "description": "Filtro por status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Número máximo de itens por página",
              "default": 20,
              "title": "Limit"
            },
            "description": "Número máximo de itens por página"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para paginação",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para paginação"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Create Benefit",
        "description": "Cria um novo benefício para um parceiro específico.\nSegue a estrutura do Firestore onde benefícios são agrupados por parceiro.",
        "operationId": "create_benefit_v1_admin_benefits_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Dados do benefício",
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/benefits/{partner_id}/{benefit_id}": {
      "get": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Get Benefit Details",
        "description": "Obtém detalhes de um benefício específico.\n\nEndpoint para administradores visualizarem benefícios específicos\nde qualquer parceiro do sistema.",
        "operationId": "get_benefit_details_v1_admin_benefits__partner_id___benefit_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Partner Id"
            },
            "description": "ID do parceiro"
          },
          {
            "name": "benefit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do benefício",
              "title": "Benefit Id"
            },
            "description": "ID do benefício"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Update Benefit",
        "description": "Atualiza um benefício específico de um parceiro.\n\nEndpoint para administradores atualizarem benefícios de qualquer parceiro,\nseguindo a nova estrutura com partner_id e benefit_id na URL.",
        "operationId": "update_benefit_v1_admin_benefits__partner_id___benefit_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Partner Id"
            },
            "description": "ID do parceiro"
          },
          {
            "name": "benefit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do benefício",
              "title": "Benefit Id"
            },
            "description": "ID do benefício"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Delete Benefit",
        "description": "Remove um benefício específico de um parceiro.\n\nEndpoint para administradores removerem benefícios de qualquer parceiro.\nPor padrão, realiza hard delete (remoção completa). Use soft_delete=true para manter o benefício marcado como inativo.",
        "operationId": "delete_benefit_v1_admin_benefits__partner_id___benefit_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Partner Id"
            },
            "description": "ID do parceiro"
          },
          {
            "name": "benefit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do benefício",
              "title": "Benefit Id"
            },
            "description": "ID do benefício"
          },
          {
            "name": "soft_delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Usar soft delete (padrão: False - Hard Delete)",
              "default": false,
              "title": "Soft Delete"
            },
            "description": "Usar soft delete (padrão: False - Hard Delete)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/metrics": {
      "get": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Get Metrics",
        "description": "Retorna métricas e KPIs do sistema.",
        "operationId": "get_metrics_v1_admin_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/admin/notifications": {
      "post": {
        "tags": [
          "Admin",
          "admin"
        ],
        "summary": "Send Notifications",
        "description": "Envia notificações push/e-mail para alunos ou parceiros.",
        "operationId": "send_notifications_v1_admin_notifications_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/employee/partners": {
      "get": {
        "tags": [
          "Employee",
          "employee"
        ],
        "summary": "List Partners",
        "description": "Lista parceiros disponíveis para funcionários com filtros e paginação.\n\nEndpoint específico para funcionários com as seguintes características:\n- Utiliza circuit breaker para alta disponibilidade\n- Ordenação habilitada por padrão\n- Acesso apenas a parceiros ativos",
        "operationId": "list_partners_v1_employee_partners_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "cat",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtro por categoria",
              "title": "Cat"
            },
            "description": "Filtro por categoria"
          },
          {
            "name": "ord",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Ordenação (name, category)",
              "default": "name",
              "title": "Ord"
            },
            "description": "Ordenação (name, category)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para paginação",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para paginação"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/employee/me/fav": {
      "get": {
        "tags": [
          "Employee",
          "employee"
        ],
        "summary": "List Favorites",
        "description": "Gera um código de validação de 6 dígitos para o usuário (funcionário).",
        "operationId": "list_favorites_v1_employee_me_fav_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoritesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Employee",
          "employee"
        ],
        "summary": "Add Employee Favorite",
        "description": "Adiciona um parceiro à lista de favoritos do funcionário.\n\nUtiliza a nova estrutura de coleções separadas (employees_fav).",
        "operationId": "add_employee_favorite_v1_employee_me_fav_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoriteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/employee/validation-codes": {
      "post": {
        "tags": [
          "Employee",
          "employee"
        ],
        "summary": "Create Validation Code",
        "description": "Gera um código de validação de 6 dígitos para um parceiro.",
        "operationId": "create_validation_code_v1_employee_validation_codes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationCodeCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Validation Code V1 Employee Validation Codes Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/employee/me/fav/{partner_id}": {
      "delete": {
        "tags": [
          "Employee",
          "employee"
        ],
        "summary": "Remove Employee Favorite",
        "description": "Remove um parceiro da lista de favoritos do funcionário.\n\nUtiliza a nova estrutura de coleções separadas (employees_fav).",
        "operationId": "remove_employee_favorite_v1_employee_me_fav__partner_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Partner Id"
            },
            "description": "ID do parceiro"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/employee/me/history": {
      "get": {
        "tags": [
          "Employee",
          "employee"
        ],
        "summary": "Get Employee Validation History",
        "description": "Retorna o histórico de códigos de validação usados pelo funcionário.",
        "operationId": "get_employee_validation_history_v1_employee_me_history_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/employee/partners/{id}": {
      "get": {
        "tags": [
          "Employee",
          "employee"
        ],
        "summary": "Get Partner Details",
        "description": "Retorna detalhes de um parceiro específico com suas promoções ativas para funcionários.",
        "operationId": "get_partner_details_v1_employee_partners__id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Id"
            },
            "description": "ID do parceiro"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/logos/logos/": {
      "get": {
        "tags": [
          "Logos",
          "logos"
        ],
        "summary": "List Partner Logos",
        "description": "Lista todos os logos de parceiros disponíveis (apenas administradores).\n\nEste endpoint retorna uma lista de logos com URLs assinadas para acesso seguro.\nRestrito a usuários com perfil de administrador.\n\nArgs:\n    category: Filtro opcional por categoria de parceiro\n    force_refresh: Se True, força atualização do cache\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Lista de logos com informações detalhadas:\n    [\n        {\n            \"partner_id\": \"PTN_A1E3018_AUT\",\n            \"filename\": \"PTN_A1E3018_AUT.png\",\n            \"url\": \"https://...\",\n            \"category\": \"AUT\",\n            \"size\": 12345,\n            \"updated_at\": \"2025-01-15T10:30:00Z\"\n        }\n    ]\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin, 500 se houver erro interno",
        "operationId": "list_partner_logos_v1_logos_logos__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por categoria (EDU, AUT, TEC, etc.)",
              "title": "Category"
            },
            "description": "Filtrar por categoria (EDU, AUT, TEC, etc.)"
          },
          {
            "name": "force_refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Forçar atualização do cache",
              "default": false,
              "title": "Force Refresh"
            },
            "description": "Forçar atualização do cache"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "title": "Response List Partner Logos V1 Logos Logos  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/logos/logos/{partner_id}": {
      "get": {
        "tags": [
          "Logos",
          "logos"
        ],
        "summary": "Get Partner Logo",
        "description": "Obtém o logo de um parceiro específico (apenas administradores).\n\nArgs:\n    partner_id: ID do parceiro (ex: \"PTN_A1E3018_AUT\")\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Informações do logo do parceiro:\n    {\n        \"partner_id\": \"PTN_A1E3018_AUT\",\n        \"url\": \"https://...\",\n        \"found\": true\n    }\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin, 404 se logo não encontrado",
        "operationId": "get_partner_logo_v1_logos_logos__partner_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Partner Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Get Partner Logo V1 Logos Logos  Partner Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/logos/logos/categories": {
      "get": {
        "tags": [
          "Logos",
          "logos"
        ],
        "summary": "List Logo Categories",
        "description": "Lista todas as categorias de logos disponíveis (apenas administradores).\n\nArgs:\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Lista de categorias únicas encontradas nos logos\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin, 500 em caso de erro interno",
        "operationId": "list_logo_categories_v1_logos_logos_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Logo Categories V1 Logos Logos Categories Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/logos/logos/refresh": {
      "post": {
        "tags": [
          "Logos",
          "logos"
        ],
        "summary": "Refresh Logo Urls",
        "description": "Força a regeneração de todas as URLs de logos (apenas administradores).\nÚtil quando URLs começam a expirar.\n\nArgs:\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Resultado da operação de refresh\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin, 500 em caso de erro interno",
        "operationId": "refresh_logo_urls_v1_logos_logos_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Refresh Logo Urls V1 Logos Logos Refresh Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/logos/logos/cache/clear": {
      "post": {
        "tags": [
          "Logos",
          "logos"
        ],
        "summary": "Clear Logos Cache",
        "description": "Limpa o cache de logos (apenas administradores).\n\nArgs:\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Confirmação da operação\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin",
        "operationId": "clear_logos_cache_v1_logos_logos_cache_clear_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Clear Logos Cache V1 Logos Logos Cache Clear Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/logos/logos/health": {
      "get": {
        "tags": [
          "Logos",
          "logos"
        ],
        "summary": "Logos Health Check",
        "description": "Verifica a saúde do serviço de logos (apenas administradores).\n\nArgs:\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Status do serviço de logos\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin",
        "operationId": "logos_health_check_v1_logos_logos_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Logos Health Check V1 Logos Logos Health Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/partner/redeem": {
      "post": {
        "tags": [
          "Partner",
          "partner"
        ],
        "summary": "Redeem Code",
        "description": "Resgata um código de validação gerado por um aluno.\nLimitado a 5 requisições por minuto por IP.",
        "operationId": "redeem_code_v1_partner_redeem_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationCodeRedeemRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/partner/promotions": {
      "post": {
        "tags": [
          "Partner",
          "partner"
        ],
        "summary": "Create Promotion",
        "description": "Cria uma nova promoção para o parceiro.",
        "operationId": "create_promotion_v1_partner_promotions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/partner/promotions/{id}": {
      "put": {
        "tags": [
          "Partner",
          "partner"
        ],
        "summary": "Update Promotion",
        "description": "Atualiza uma promoção existente do parceiro.",
        "operationId": "update_promotion_v1_partner_promotions__id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID da promoção",
              "title": "Id"
            },
            "description": "ID da promoção"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Partner",
          "partner"
        ],
        "summary": "Delete Promotion",
        "description": "Remove uma promoção existente do parceiro usando hard delete.",
        "operationId": "delete_promotion_v1_partner_promotions__id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID da promoção",
              "title": "Id"
            },
            "description": "ID da promoção"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/partner/reports": {
      "get": {
        "tags": [
          "Partner",
          "partner"
        ],
        "summary": "Get Partner Reports",
        "description": "Retorna relatório de uso das promoções do parceiro.",
        "operationId": "get_partner_reports_v1_partner_reports_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Período para relatório (formato YYYY-MM)",
              "title": "Range"
            },
            "description": "Período para relatório (formato YYYY-MM)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/student/partners": {
      "get": {
        "tags": [
          "Student",
          "student"
        ],
        "summary": "List Partners",
        "description": "Lista parceiros com filtros e paginação.\n\nEndpoint específico para estudantes com as seguintes características:\n- Utiliza circuit breaker para alta disponibilidade\n- Ordenação desabilitada por padrão (para evitar necessidade de índices)\n- Acesso apenas a parceiros ativos",
        "operationId": "list_partners_v1_student_partners_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "cat",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtro por categoria",
              "title": "Cat"
            },
            "description": "Filtro por categoria"
          },
          {
            "name": "ord",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Ordenação dos resultados",
              "enum": [
                "name_asc",
                "name_desc",
                "category_asc",
                "category_desc"
              ],
              "title": "Ord"
            },
            "description": "Ordenação dos resultados"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Número máximo de itens por página",
              "default": 20,
              "title": "Limit"
            },
            "description": "Número máximo de itens por página"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para paginação",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para paginação"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/student/partners/{id}": {
      "get": {
        "tags": [
          "Student",
          "student"
        ],
        "summary": "Get Partner Details",
        "description": "Retorna detalhes do parceiro e suas promoções ativas.",
        "operationId": "get_partner_details_v1_student_partners__id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Id"
            },
            "description": "ID do parceiro"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/student/validation-codes": {
      "post": {
        "tags": [
          "Student",
          "student"
        ],
        "summary": "Create Validation Code",
        "description": "Gera um código de validação de 6 dígitos para um parceiro.",
        "operationId": "create_validation_code_v1_student_validation_codes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationCodeCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/student/me/fav": {
      "get": {
        "tags": [
          "Student",
          "student"
        ],
        "summary": "List Favorites",
        "description": "Retorna a lista de parceiros favoritos do aluno.\n\nUtiliza a nova estrutura de coleções separadas (students_fav).",
        "operationId": "list_favorites_v1_student_me_fav_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoritesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Student",
          "student"
        ],
        "summary": "Add Student Favorite",
        "description": "Adiciona um parceiro à lista de favoritos do aluno.\n\nUtiliza a nova estrutura de coleções separadas (students_fav).",
        "operationId": "add_student_favorite_v1_student_me_fav_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoriteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/student/me/fav/{partner_id}": {
      "delete": {
        "tags": [
          "Student",
          "student"
        ],
        "summary": "Remove Student Favorite",
        "description": "Remove um parceiro da lista de favoritos do aluno.\n\nUtiliza a nova estrutura de coleções separadas (students_fav).",
        "operationId": "remove_student_favorite_v1_student_me_fav__partner_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Partner Id"
            },
            "description": "ID do parceiro"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sync/sync/partners/logos": {
      "post": {
        "tags": [
          "Sync",
          "sync"
        ],
        "summary": "Sync All Partner Logos",
        "description": "Sincroniza as URLs de logos de todos os parceiros (apenas administradores).\n\nEste endpoint atualiza as URLs de logos na coleção partners,\ngarantindo que apontem para as imagens corretas no Firebase Storage.\n\nArgs:\n    force_update: Se True, atualiza todos os parceiros independente da data\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Relatório da sincronização:\n    {\n        \"status\": \"completed\",\n        \"total_partners\": 150,\n        \"updated_count\": 45,\n        \"errors\": [],\n        \"duration_seconds\": 12.5,\n        \"timestamp\": \"2025-01-15T10:30:00Z\"\n    }\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin, 500 em caso de erro",
        "operationId": "sync_all_partner_logos_v1_sync_sync_partners_logos_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "force_update",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Forçar atualização de todos os parceiros",
              "default": false,
              "title": "Force Update"
            },
            "description": "Forçar atualização de todos os parceiros"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Sync All Partner Logos V1 Sync Sync Partners Logos Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sync/sync/partners/{partner_id}/logo": {
      "post": {
        "tags": [
          "Sync",
          "sync"
        ],
        "summary": "Sync Partner Logo",
        "description": "Sincroniza a URL do logo de um parceiro específico (apenas administradores).\n\nArgs:\n    partner_id: ID do parceiro a ser sincronizado\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Resultado da sincronização:\n    {\n        \"partner_id\": \"PTN_A1E3018_AUT\",\n        \"updated\": true,\n        \"logo_url\": \"https://...\",\n        \"previous_url\": \"https://...\",\n        \"timestamp\": \"2025-01-15T10:30:00Z\"\n    }\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin, 404 se parceiro não encontrado",
        "operationId": "sync_partner_logo_v1_sync_sync_partners__partner_id__logo_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Partner Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Sync Partner Logo V1 Sync Sync Partners  Partner Id  Logo Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sync/sync/partners/logos/outdated": {
      "get": {
        "tags": [
          "Sync",
          "sync"
        ],
        "summary": "Check Outdated Logos",
        "description": "Verifica parceiros com logos desatualizados (apenas administradores).\n\nArgs:\n    max_age_hours: Idade máxima em horas para considerar o logo atualizado\n    current_user: Dados do usuário administrador autenticado\n\nReturns:\n    Lista de parceiros com logos desatualizados:\n    {\n        \"outdated_partners\": [\"PTN_A1E3018_AUT\", \"PTN_B2F4019_EDU\"],\n        \"total_outdated\": 2,\n        \"max_age_hours\": 24,\n        \"checked_at\": \"2025-01-15T10:30:00Z\"\n    }\n\nRaises:\n    HTTPException: 401 se não autenticado, 403 se não for admin, 500 em caso de erro",
        "operationId": "check_outdated_logos_v1_sync_sync_partners_logos_outdated_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "max_age_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Idade máxima em horas para considerar o logo atualizado",
              "default": 24,
              "title": "Max Age Hours"
            },
            "description": "Idade máxima em horas para considerar o logo atualizado"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Check Outdated Logos V1 Sync Sync Partners Logos Outdated Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sync/sync/status": {
      "get": {
        "tags": [
          "Sync",
          "sync"
        ],
        "summary": "Status da sincronização",
        "description": "Obtém status atual da sincronização de logos.\n\n**Acesso restrito a administradores.**",
        "operationId": "get_sync_status_v1_sync_sync_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Get Sync Status V1 Sync Sync Status Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/sync/sync/upload": {
      "post": {
        "tags": [
          "Sync",
          "sync"
        ],
        "summary": "Upload de logo de parceiro",
        "description": "Faz upload de logo para um parceiro específico.\n\n**Acesso restrito a administradores.**\n\n**Validações aplicadas:**\n- Formato: PNG, JPG, JPEG, WEBP, SVG\n- Tamanho máximo: 5MB\n- Dimensões: 100x100 até 2000x2000 pixels\n- Nomenclatura: PTN_{partner_id}_{category}.{ext}",
        "operationId": "upload_partner_logo_v1_sync_sync_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_partner_logo_v1_sync_sync_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Upload Partner Logo V1 Sync Sync Upload Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/sync/sync/logo/{partner_id}": {
      "delete": {
        "tags": [
          "Sync",
          "sync"
        ],
        "summary": "Remover logo de parceiro",
        "description": "Remove logo de um parceiro específico.\n\n**Acesso restrito a administradores.**",
        "operationId": "delete_partner_logo_v1_sync_sync_logo__partner_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "partner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID do parceiro",
              "title": "Partner Id"
            },
            "description": "ID do parceiro"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Partner Logo V1 Sync Sync Logo  Partner Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/login-legacy": {
      "post": {
        "tags": [
          "Users",
          "authentication"
        ],
        "summary": "Login Legacy",
        "description": "Endpoint de login que gera JWT local (método legado).\n\nArgs:\n    request: Dados de login\n\nReturns:\n    Token JWT e informações do usuário\n\nRaises:\n    HTTPException: Se as credenciais forem inválidas",
        "operationId": "login_legacy_v1_users_login_legacy_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/login": {
      "post": {
        "tags": [
          "Users",
          "authentication"
        ],
        "summary": "Login",
        "description": "Endpoint principal de login com token Firebase.\n\nValida o token Firebase recebido e gera um JWT local com expiração de 30 minutos.\nEste é o método de autenticação recomendado.\n\nArgs:\n    request: Dados contendo o token Firebase\n\nReturns:\n    Token JWT local e informações do usuário\n\nRaises:\n    HTTPException: Se o token Firebase for inválido",
        "operationId": "login_v1_users_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirebaseLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/validate": {
      "post": {
        "tags": [
          "Users",
          "authentication"
        ],
        "summary": "Validate Token",
        "description": "Endpoint para validar um token JWT.\n\nArgs:\n    credentials: Credenciais HTTP Bearer\n\nReturns:\n    Resultado da validação do token",
        "operationId": "validate_token_v1_users_validate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenValidationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/users/me": {
      "get": {
        "tags": [
          "Users",
          "authentication"
        ],
        "summary": "Get Me",
        "description": "Endpoint para obter informações do usuário atual.\n\nArgs:\n    current_user: Usuário autenticado obtido via dependência\n\nReturns:\n    Informações do usuário autenticado",
        "operationId": "get_me_v1_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/users/refresh": {
      "post": {
        "tags": [
          "Users",
          "authentication"
        ],
        "summary": "Refresh Token",
        "description": "Endpoint para renovar um token JWT.\n\nArgs:\n    credentials: Credenciais HTTP Bearer\n\nReturns:\n    Novo token JWT",
        "operationId": "refresh_token_v1_users_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/users/test-firebase-token": {
      "post": {
        "tags": [
          "Users",
          "authentication"
        ],
        "summary": "Test Firebase Token",
        "description": "Endpoint de teste exclusivo para receber e validar tokens Firebase.\n\nEste endpoint é usado para testar a recepção e validação de tokens Firebase\nenviados pelo frontend. Retorna uma confirmação de recebimento e o status\nde validação do token.\n\nArgs:\n    request: Objeto contendo o token Firebase\n\nReturns:\n    Mensagem de confirmação e informações de validação",
        "operationId": "test_firebase_token_v1_users_test_firebase_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirebaseTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Endpoint raiz da API.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Endpoint de verificação de saúde da API.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          }
        },
        "type": "object",
        "title": "BaseResponse",
        "description": "Modelo base para respostas da API."
      },
      "Benefit": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "partner_id": {
            "type": "string",
            "title": "Partner Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "value": {
            "type": "integer",
            "title": "Value"
          },
          "value_type": {
            "type": "string",
            "title": "Value Type",
            "description": "percentage | fixed",
            "default": "percentage"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time",
            "title": "Valid From"
          },
          "valid_to": {
            "type": "string",
            "format": "date-time",
            "title": "Valid To"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "audience": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Audience",
            "description": "Público-alvo: lista com 'student' e/ou 'employee'"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "partner_id",
          "title",
          "value",
          "type",
          "valid_from",
          "valid_to"
        ],
        "title": "Benefit",
        "description": "Modelo principal do Benefício."
      },
      "BenefitRequest": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time",
            "title": "Valid From"
          },
          "valid_to": {
            "type": "string",
            "format": "date-time",
            "title": "Valid To"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "audience": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Audience",
            "description": "Público-alvo: lista com 'student' e/ou 'employee'",
            "default": [
              "all",
              "employee",
              "student"
            ]
          }
        },
        "type": "object",
        "required": [
          "title",
          "type",
          "valid_from",
          "valid_to"
        ],
        "title": "BenefitRequest",
        "description": "Modelo para requisições de criação/atualização de benefícios.\n\nUsado nos endpoints da API para receber dados de benefícios\ndos parceiros com validações apropriadas."
      },
      "BenefitResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          },
          "data": {
            "$ref": "#/components/schemas/Benefit"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "BenefitResponse",
        "description": "Modelo para respostas da API contendo dados de benefícios.\n\nUsado para retornar dados de benefícios nos endpoints da API\ncom formatação apropriada para o frontend."
      },
      "Body_upload_partner_logo_v1_sync_sync_upload_post": {
        "properties": {
          "partner_id": {
            "type": "string",
            "title": "Partner Id",
            "description": "ID do parceiro"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Categoria do parceiro (EDU, SAU, etc.)"
          },
          "overwrite": {
            "type": "boolean",
            "title": "Overwrite",
            "description": "Sobrescrever arquivo existente",
            "default": false
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Arquivo de logo"
          }
        },
        "type": "object",
        "required": [
          "partner_id",
          "category",
          "file"
        ],
        "title": "Body_upload_partner_logo_v1_sync_sync_upload_post"
      },
      "EntityListResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "EntityListResponse",
        "description": "Modelo para resposta de listagem de entidades."
      },
      "EntityResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "EntityResponse",
        "description": "Modelo para resposta de entidade."
      },
      "FavoriteRequest": {
        "properties": {
          "partner_id": {
            "type": "string",
            "title": "Partner Id",
            "description": "ID do parceiro a ser adicionado/removido dos favoritos"
          }
        },
        "type": "object",
        "required": [
          "partner_id"
        ],
        "title": "FavoriteRequest",
        "description": "Modelo para requisições de adição/remoção de favoritos."
      },
      "FavoriteResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indica se a operação foi bem-sucedida"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Mensagem descritiva da operação"
          },
          "favorites_count": {
            "type": "integer",
            "title": "Favorites Count",
            "description": "Número total de favoritos após a operação",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "FavoriteResponse",
        "description": "Modelo para respostas de operações de favoritos."
      },
      "FavoritesResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Partner"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "FavoritesResponse",
        "description": "Modelo para resposta de favoritos."
      },
      "FirebaseLoginRequest": {
        "properties": {
          "firebase_token": {
            "type": "string",
            "title": "Firebase Token"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "firebase_token"
        ],
        "title": "FirebaseLoginRequest",
        "description": "Modelo para requisição de login com token Firebase."
      },
      "FirebaseTokenRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "FirebaseTokenRequest",
        "description": "Modelo para requisição de teste de token Firebase."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "default": "student"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest",
        "description": "Modelo para requisição de login com credenciais."
      },
      "LoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "default": 86400
          },
          "user_info": {
            "type": "object",
            "title": "User Info"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "user_info"
        ],
        "title": "LoginResponse",
        "description": "Modelo para resposta de login."
      },
      "MetricsResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "MetricsResponse",
        "description": "Modelo para resposta de métricas."
      },
      "NotificationRequest": {
        "properties": {
          "target": {
            "type": "string",
            "title": "Target"
          },
          "filter": {
            "type": "object",
            "title": "Filter",
            "default": {}
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "both"
          }
        },
        "type": "object",
        "required": [
          "target",
          "message"
        ],
        "title": "NotificationRequest",
        "description": "Modelo para requisição de envio de notificações."
      },
      "Partner": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "ID único do parceiro no formato PTN_XXXXXXX_XXX"
          },
          "trade_name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Trade Name",
            "description": "Nome comercial do parceiro"
          },
          "tenant_id": {
            "type": "string",
            "maxLength": 30,
            "minLength": 1,
            "title": "Tenant Id",
            "description": "ID do tenant do parceiro"
          },
          "benefits_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Benefits Count",
            "description": "Número total de benefícios oferecidos",
            "default": 0
          },
          "has_active_benefits": {
            "type": "boolean",
            "title": "Has Active Benefits",
            "description": "Indica se o parceiro possui benefícios ativos",
            "default": false
          },
          "cnpj": {
            "type": "string",
            "title": "Cnpj",
            "description": "CNPJ do parceiro no formato XX.XXX.XXX/XXXX-XX"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "URL do logo do parceiro no Firebase Storage"
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartnerAddress"
              },
              {
                "type": "null"
              }
            ],
            "description": "Endereço do parceiro"
          },
          "social_networks": {
            "$ref": "#/components/schemas/PartnerSocialNetworks",
            "description": "Redes sociais do parceiro"
          },
          "geolocation": {
            "$ref": "#/components/schemas/PartnerGeolocation",
            "description": "Links de geolocalização"
          },
          "category": {
            "$ref": "#/components/schemas/PartnerCategory",
            "description": "Categoria do parceiro"
          },
          "contact": {
            "$ref": "#/components/schemas/PartnerContact",
            "description": "Informações de contato do parceiro"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "Status ativo/inativo do parceiro",
            "default": true
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Data de criação"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Data de última atualização"
          }
        },
        "type": "object",
        "required": [
          "id",
          "trade_name",
          "tenant_id",
          "cnpj",
          "social_networks",
          "geolocation",
          "category",
          "contact"
        ],
        "title": "Partner",
        "description": "Modelo principal do Parceiro.\n\nRepresenta um parceiro do sistema KNN Benefits com todas as suas\ninformações de contato, endereço, categoria e configurações."
      },
      "PartnerAddress": {
        "properties": {
          "zip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip",
            "description": "CEP no formato XXXXX-XXX"
          },
          "street": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Street",
            "description": "Nome da rua/logradouro"
          },
          "neighborhood": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Neighborhood",
            "description": "Nome do bairro"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "Nome da cidade"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "Sigla do estado (UF)"
          }
        },
        "type": "object",
        "title": "PartnerAddress",
        "description": "Modelo para endereço do parceiro."
      },
      "PartnerCategory": {
        "type": "string",
        "enum": [
          "Automotivo",
          "Educação",
          "Tecnologia",
          "Alimentação",
          "Entretenimento",
          "Varejo",
          "Serviços",
          "Papelaria",
          "Esporte",
          "Saúde e Bem-estar",
          "Turismo e Viagem",
          "Moda",
          "Outros"
        ],
        "title": "PartnerCategory",
        "description": "Categorias disponíveis para parceiros."
      },
      "PartnerContact": {
        "properties": {
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Número de telefone"
          },
          "whatsapp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Whatsapp",
            "description": "Número do WhatsApp"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Endereço de email"
          }
        },
        "type": "object",
        "title": "PartnerContact",
        "description": "Modelo para informações de contato do parceiro."
      },
      "PartnerDetail": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "ID único do parceiro no formato PTN_XXXXXXX_XXX"
          },
          "trade_name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Trade Name",
            "description": "Nome comercial do parceiro"
          },
          "tenant_id": {
            "type": "string",
            "maxLength": 30,
            "minLength": 1,
            "title": "Tenant Id",
            "description": "ID do tenant do parceiro"
          },
          "benefits_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Benefits Count",
            "description": "Número total de benefícios oferecidos",
            "default": 0
          },
          "has_active_benefits": {
            "type": "boolean",
            "title": "Has Active Benefits",
            "description": "Indica se o parceiro possui benefícios ativos",
            "default": false
          },
          "cnpj": {
            "type": "string",
            "title": "Cnpj",
            "description": "CNPJ do parceiro no formato XX.XXX.XXX/XXXX-XX"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "URL do logo do parceiro no Firebase Storage"
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartnerAddress"
              },
              {
                "type": "null"
              }
            ],
            "description": "Endereço do parceiro"
          },
          "social_networks": {
            "$ref": "#/components/schemas/PartnerSocialNetworks",
            "description": "Redes sociais do parceiro"
          },
          "geolocation": {
            "$ref": "#/components/schemas/PartnerGeolocation",
            "description": "Links de geolocalização"
          },
          "category": {
            "$ref": "#/components/schemas/PartnerCategory",
            "description": "Categoria do parceiro"
          },
          "contact": {
            "$ref": "#/components/schemas/PartnerContact",
            "description": "Informações de contato do parceiro"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "Status ativo/inativo do parceiro",
            "default": true
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Data de criação"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Data de última atualização"
          },
          "promotions": {
            "items": {
              "$ref": "#/components/schemas/Promotion"
            },
            "type": "array",
            "title": "Promotions",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "trade_name",
          "tenant_id",
          "cnpj",
          "social_networks",
          "geolocation",
          "category",
          "contact"
        ],
        "title": "PartnerDetail",
        "description": "Modelo para detalhes de parceiro com promoções."
      },
      "PartnerDetailResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          },
          "data": {
            "$ref": "#/components/schemas/PartnerDetail"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "PartnerDetailResponse",
        "description": "Modelo para resposta de detalhes de parceiro."
      },
      "PartnerGeolocation": {
        "properties": {
          "google": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google",
            "description": "URL do Google Maps"
          },
          "waze": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waze",
            "description": "URL do Waze"
          }
        },
        "type": "object",
        "title": "PartnerGeolocation",
        "description": "Modelo para links de geolocalização."
      },
      "PartnerListResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Partner"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "PartnerListResponse",
        "description": "Modelo para resposta de listagem de parceiros."
      },
      "PartnerSocialNetworks": {
        "properties": {
          "instagram": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram",
            "description": "URL ou handle do Instagram"
          },
          "facebook": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Facebook",
            "description": "URL da página do Facebook"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website",
            "description": "URL do site oficial"
          }
        },
        "type": "object",
        "title": "PartnerSocialNetworks",
        "description": "Modelo para redes sociais do parceiro."
      },
      "Promotion": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "partner_id": {
            "type": "string",
            "title": "Partner Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time",
            "title": "Valid From"
          },
          "valid_to": {
            "type": "string",
            "format": "date-time",
            "title": "Valid To"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "audience": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Audience",
            "description": "Público-alvo: lista com 'student' e/ou 'employee'",
            "default": [
              "student",
              "employee"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "partner_id",
          "title",
          "type",
          "valid_from",
          "valid_to"
        ],
        "title": "Promotion",
        "description": "Modelo legado - usar Benefit ao invés desta classe."
      },
      "RedeemResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "RedeemResponse",
        "description": "Modelo para resposta de resgate de código."
      },
      "ReportResponse": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg",
            "default": "ok"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ReportResponse",
        "description": "Modelo para resposta de relatório."
      },
      "TokenValidationResponse": {
        "properties": {
          "valid": {
            "type": "boolean",
            "title": "Valid"
          },
          "payload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payload"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "valid"
        ],
        "title": "TokenValidationResponse",
        "description": "Modelo para resposta de validação de token."
      },
      "ValidationCodeCreationRequest": {
        "properties": {
          "partner_id": {
            "type": "string",
            "title": "Partner Id",
            "description": "ID of the partner for which the code is being generated."
          }
        },
        "type": "object",
        "required": [
          "partner_id"
        ],
        "title": "ValidationCodeCreationRequest",
        "description": "DTO for creating a validation code."
      },
      "ValidationCodeRedeemRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "description": "Código de validação de 6 dígitos."
          },
          "cnpj": {
            "type": "string",
            "title": "Cnpj",
            "description": "CNPJ do parceiro que está resgatando o código."
          }
        },
        "type": "object",
        "required": [
          "code",
          "cnpj"
        ],
        "title": "ValidationCodeRedeemRequest",
        "description": "DTO para a requisição de resgate de um código de validação."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}