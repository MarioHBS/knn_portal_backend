#!/usr/bin/env python3
"""
Configura√ß√£o do Firebase para o Portal de Benef√≠cios KNN.

Este arquivo cont√©m as configura√ß√µes necess√°rias para conectar com o Firebase.
As credenciais devem ser definidas no arquivo .env ou como vari√°veis de ambiente.
"""

import os
from pathlib import Path

# Carregar vari√°veis do arquivo .env se existir
try:
    from dotenv import load_dotenv

    env_path = Path(__file__).parent / ".env"
    if env_path.exists():
        load_dotenv(env_path)
except ImportError:
    # python-dotenv n√£o est√° instalado, continuar sem carregar .env
    pass

# Configura√ß√µes do Firebase
FIREBASE_CONFIG = {
    "apiKey": os.getenv("FB_API_KEY", "your-api-key-here"),
    "authDomain": os.getenv("FB_AUTH_DOMAIN", "your-project.firebaseapp.com"),
    "projectId": os.getenv("FIRESTORE_PROJECT", "knn-benefits"),
    "storageBucket": os.getenv("FB_STORAGE_BUCKET", "your-project.appspot.com"),
    "messagingSenderId": os.getenv("FB_MESSAGING_SENDER_ID", "123456789"),
    "appId": os.getenv("FB_APP_ID", "your-app-id"),
    "measurementId": os.getenv("FB_MEASUREMENT_ID", "your-measurement-id"),
}


# Validar se as configura√ß√µes foram definidas
def validate_firebase_config():
    """
    Valida se todas as configura√ß√µes necess√°rias do Firebase foram definidas.

    Returns:
        tuple: (is_valid, missing_configs)
    """
    missing_configs = []

    for key, value in FIREBASE_CONFIG.items():
        if value.startswith("your-") or value in ["123456789"]:
            missing_configs.append(key)

    is_valid = len(missing_configs) == 0
    return is_valid, missing_configs


def get_firebase_config():
    """
    Retorna a configura√ß√£o do Firebase.

    Returns:
        dict: Configura√ß√£o do Firebase
    """
    return FIREBASE_CONFIG.copy()


def print_firebase_status():
    """
    Imprime o status da configura√ß√£o do Firebase.
    """
    print("=== Status da Configura√ß√£o Firebase ===")
    print(f"Project ID: {FIREBASE_CONFIG['projectId']}")
    print(f"Auth Domain: {FIREBASE_CONFIG['authDomain']}")
    print(f"Storage Bucket: {FIREBASE_CONFIG['storageBucket']}")

    is_valid, missing = validate_firebase_config()

    if is_valid:
        print("‚úÖ Todas as configura√ß√µes do Firebase est√£o definidas")
    else:
        print("‚ö†Ô∏è  Configura√ß√µes pendentes:")
        for config in missing:
            print(f"   - {config}")
        print("\nüí° Atualize o arquivo .env com as credenciais corretas do Firebase")


if __name__ == "__main__":
    print_firebase_status()
