rules_version = '2';

// Regras de segurança do Firebase Storage
// Para imagens de parceiros e recursos do sistema
service firebase.storage {
  match /b/{bucket}/o {
    
    // Regras para imagens de parceiros
    match /partners/{imageType}/{imageId} {
      // Leitura permitida para usuários autenticados
      allow read: if request.auth != null;
      
      // Upload e modificação permitidos apenas para admins
      allow write: if request.auth != null 
                   && request.auth.token.admin == true
                   && isValidImage()
                   && isValidSize();
      
      // Exclusão permitida apenas para admins
      allow delete: if request.auth != null 
                    && request.auth.token.admin == true;
    }
    
    // Pasta temporária para uploads
    match /temp/{allPaths=**} {
      // Acesso completo para admins
      allow read, write: if request.auth != null 
                         && request.auth.token.admin == true;
      
      // Limpeza automática após 24h (implementar via Cloud Functions)
    }
    
    // Pasta de uploads gerais
    match /uploads/{allPaths=**} {
      // Leitura para usuários autenticados
      allow read: if request.auth != null;
      
      // Upload para admins com validações
      allow write: if request.auth != null 
                   && request.auth.token.admin == true
                   && isValidImage()
                   && isValidSize();
    }
    
    // Pasta pública para recursos estáticos
    match /public/{allPaths=**} {
      // Leitura pública
      allow read;
      
      // Escrita apenas para admins
      allow write: if request.auth != null 
                   && request.auth.token.admin == true;
    }
    
    // Pasta de backup (somente leitura para admins)
    match /backup/{allPaths=**} {
      allow read: if request.auth != null 
                  && request.auth.token.admin == true;
      
      // Escrita apenas via Cloud Functions ou scripts administrativos
      allow write: if false; // Desabilitado para uploads diretos
    }
    
    // Regra padrão - negar acesso
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

// Funções auxiliares para validação
function isValidImage() {
  return request.resource.contentType != null 
         && request.resource.contentType.matches('image/.*')
         && request.resource.contentType in [
           'image/png', 
           'image/jpeg', 
           'image/jpg', 
           'image/webp'
         ];
}

function isValidSize() {
  return request.resource.size <= 5 * 1024 * 1024; // 5MB máximo
}

function isAdmin() {
  return request.auth != null 
         && request.auth.token.admin == true;
}

function isOwnerOrAdmin(userId) {
  return request.auth != null 
         && (request.auth.uid == userId || request.auth.token.admin == true);
}

// Validações específicas por tipo de imagem
function isValidLogo() {
  return isValidImage() 
         && request.resource.size <= 2 * 1024 * 1024; // 2MB para logos
}

function isValidFaixada() {
  return isValidImage() 
         && request.resource.size <= 5 * 1024 * 1024; // 5MB para faixadas
}